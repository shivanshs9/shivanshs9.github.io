{"version":3,"sources":["webpack:///./src/templates/tag.js","webpack:///./src/components/Sidebar/LatestPost/index.js","webpack:///./src/components/Sidebar/Information/index.js","webpack:///./src/components/Sidebar/index.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/components/SEO/index.js","webpack:///./src/api/index.js","webpack:///./src/components/Tag/index.js","webpack:///./src/api/images.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./src/components/Card/index.js"],"names":["TagPage","_ref","data","pageContext","edges","allMarkdownRemark","tag","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","style","margin","_components_Sidebar__WEBPACK_IMPORTED_MODULE_4__","fontSize","length","map","_ref2","node","_components_Card__WEBPACK_IMPORTED_MODULE_2__","Object","assign","frontmatter","key","id","_components_SEO__WEBPACK_IMPORTED_MODULE_3__","title","url","siteTitleAlt","isPost","description","image","pageQuery","LatestPost","posts","react_default","gatsby_browser_entry","to","slug","fields","href","Information","totalCount","components_Sidebar_LatestPost","defaultProps","config","wordings","githubUsername","email","profileImg","about","facebook","medium","linkedin","showResume","window","open","Icon","icon","target","rel","index_es","Sidebar","latestPosts","src","alt","Sidebar_Icon","onClick","components_Sidebar_Information","__webpack_exports__","query","render","Sidebar_Sidebar","all","limited","_1307080370","toObject","__webpack_require__","toAbsoluteIndex","toLength","module","exports","value","O","this","aLen","arguments","index","undefined","end","endPos","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","_data__WEBPACK_IMPORTED_MODULE_2__","_data__WEBPACK_IMPORTED_MODULE_2___default","SEO","name","content","type","JSON","stringify","@context","@type","alternateName","itemListElement","position","item","@id","headline","schemaOrgJSONLD","property","siteFBAppID","twitter_username","isBrowser","maxPostsInPage","parseDate","date","dayjs","format","parseDateToDateTime","parseDateToMonth","getDuration","start","dtStart","dtEnd","diffHrs","diff","diffDays","diffMonths","Tag","count","parseImgur","rawImage","size","match","resizedImage","replace","small-square","big-square","small","large","huge","parseImageTag","text","parseTitle","getGalleryImage","$export","P","fill","gatsby__WEBPACK_IMPORTED_MODULE_1__","_Tag__WEBPACK_IMPORTED_MODULE_2__","_api_images__WEBPACK_IMPORTED_MODULE_3__","_api__WEBPACK_IMPORTED_MODULE_4__","CardHeader","headerImage","color","backgroundColor","backgroundImage","Card","headerBackgroundColor","_ref2$tags","tags"],"mappings":"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","file":"component---src-templates-tag-js-9498c2b2c448668efc28.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Card from '../components/Card';\nimport SEO from '../components/SEO';\nimport Sidebar from '../components/Sidebar';\n\n// eslint-disable-next-line react/prop-types\nconst TagPage = ({ data, pageContext }) => {\n  const { edges } = data.allMarkdownRemark;\n  const { tag } = pageContext;\n  return (\n    <div className=\"container\">\n      <div\n        className=\"row\"\n        style={{\n          margin: 15,\n        }}\n      >\n        <Sidebar />\n\n        <div className=\"col-xl-10 col-lg-7 col-md-12 col-xs-12 order-2\">\n          <div\n            className=\"col-12\"\n            style={{\n              fontSize: 20,\n              margin: 15,\n            }}\n          >\n            {edges.length}\n            &nbsp;Articles in&nbsp;\n            {tag}\n          </div>\n          {edges.map(({ node }) => (\n            <Card {...node.frontmatter} key={node.id} />\n          ))}\n        </div>\n\n        <div className=\"col-xl-2 col-lg-1 order-3\" />\n      </div>\n\n      <SEO\n        title={tag}\n        url={`/tag/${tag}`}\n        siteTitleAlt=\"Shivansh Saini\"\n        isPost={false}\n        description={tag}\n        image=\"https://i.imgur.com/63BR8Nf.jpg\"\n      />\n    </div>\n  );\n};\n\nexport default TagPage;\n\nexport const pageQuery = graphql`\n  query tagQuery($tag: [String!]) {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: frontmatter___date }\n      filter: { frontmatter: { tags: { in: $tag } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            id\n            url: slug\n            title\n            date\n            tags\n            headerImage\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\n\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst LatestPost = ({ posts }) => (\n  <div className=\"latest-post\">\n    <p>Latest Posts</p>\n    {posts.map(({ node }) => (\n      <Link\n        to={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n        key={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n        href={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n      >\n        {node.frontmatter.title}\n      </Link>\n    ))}\n  </div>\n);\n\nLatestPost.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default LatestPost;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// import Friend from '../Friend';\nimport LatestPost from '../LatestPost';\nimport './index.scss';\n\n// eslint-disable-next-line react/prop-types\nconst Information = ({ totalCount, posts }) => (\n  <div className=\"d-none d-lg-block information my-2\">\n    <hr />\n    <p>\n      {totalCount}\n      &nbsp; posts\n    </p>\n    <hr />\n    <LatestPost posts={posts} />\n    {/* <hr /> */}\n    {/* <Friend /> */}\n  </div>\n);\n\nInformation.propTypes = {\n  totalCount: PropTypes.number.isRequired,\n  posts: PropTypes.array,\n};\n\nInformation.defaultProps = {\n  posts: [],\n};\n\nexport default Information;\n","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { config } from '../../../data';\n\nimport Information from './Information';\n\nimport './index.scss';\n\nconst {\n  wordings = [],\n  githubUsername,\n  email,\n  profileImg,\n  about,\n  facebook,\n  medium,\n  linkedin,\n} = config;\n\nconst showResume = () => {\n  window.open('https://drive.google.com/file/d/1XsZ-coaklQNZrXsdGmNkp3B-t52t_nmv/view', '_blank');\n};\n\nconst Icon = ({ href, icon }) => (\n  <a\n    target=\"_blank\"\n    href={href}\n    rel=\"external nofollow noopener noreferrer\"\n    className=\"custom-icon\"\n  >\n    <span className=\"fa-layers fa-fw fa-lg\">\n      <FontAwesomeIcon icon={icon} />\n    </span>\n  </a>\n);\n\nconst Sidebar = ({ totalCount, latestPosts }) => (\n  <header className=\"intro-header site-heading text-center col-xl-2 col-lg-3 col-xs-12 order-lg-1\">\n    <div className=\"about-me\">\n      <Link to={about} href={about} className=\"name\">\n        <img className=\"avatar\" src={profileImg} alt=\"shivanshs9\" />\n        <h4>Shivansh Saini</h4>\n      </Link>\n      <p className=\"mb-3\">\n        {wordings[0]}\n        &nbsp;//&nbsp;\n        {wordings[1]}\n      </p>\n      <Icon\n        href={`https://github.com/${githubUsername}`}\n        icon={['fab', 'github']}\n      />\n      {linkedin\n        && <Icon href={`https://linkedin.com/in/${linkedin}/`} icon={['fab', 'linkedin']} />\n      }\n      {medium\n        && <Icon href={`https://medium.com/@${medium}/`} icon={['fab', 'medium']} />\n      }\n      {facebook\n        && <Icon href={`https://www.facebook.com/${facebook}/`} icon={['fab', 'facebook']} />\n      }\n      <Icon href={`mailto:${email}`} icon={['far', 'envelope']} />\n      <div className=\"link-resume\" onClick={showResume}>\n        Resume\n      </div>\n      <Information totalCount={totalCount} posts={latestPosts} />\n    </div>\n  </header>\n);\n\nIcon.propTypes = {\n  href: PropTypes.string.isRequired,\n  icon: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nSidebar.propTypes = {\n  totalCount: PropTypes.number,\n  latestPosts: PropTypes.array, //eslint-disable-line\n};\n\nSidebar.defaultProps = {\n  totalCount: 0,\n  latestPosts: [],\n};\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      fragment cardData on MarkdownRemark {\n        fields {\n          slug\n        }\n        frontmatter {\n          id\n          title\n          url: slug\n          date\n          tags\n          description\n          headerImage\n        }\n      }\n\n      query SidebarQuery {\n        all: allMarkdownRemark {\n          totalCount\n        }\n\n        limited: allMarkdownRemark(\n          sort: { order: DESC, fields: frontmatter___date }\n          limit: 6\n        ) {\n          latestPosts: edges {\n            node {\n              ...cardData\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Sidebar {...data.all} {...data.limited} />}\n  />\n);\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\nimport PropTypes from 'prop-types';\n\nimport config from '../../../data';\n\nconst schemaOrgJSONLD = ({\n  url,\n  title,\n  siteTitleAlt,\n  isPost,\n  image,\n  description,\n}) => [\n  {\n    '@context': 'http://schema.org',\n    '@type': 'WebSite',\n    url,\n    name: title,\n    alternateName: siteTitleAlt || '',\n  },\n  isPost\n    ? {\n      '@context': 'http://schema.org',\n      '@type': 'BreadcrumbList',\n      itemListElement: [\n        {\n          '@type': 'ListItem',\n          position: 1,\n          item: {\n            '@id': url,\n            name: title,\n            image,\n          },\n        },\n      ],\n    }\n    : '',\n  isPost\n    ? {\n      '@context': 'http://schema.org',\n      '@type': 'BlogPosting',\n      url,\n      name: title,\n      alternateName: siteTitleAlt || '',\n      headline: title,\n      image: {\n        '@type': 'ImageObject',\n        url: image,\n      },\n      description,\n    }\n    : '',\n];\n\nconst SEO = ({\n  url, title, description, image, siteTitleAlt, isPost,\n}) => (\n  <Helmet>\n    <title>{title}</title>\n\n    {/* General tags */}\n    <meta name=\"description\" content={description} />\n    <meta name=\"image\" content={image} />\n\n    {/* Schema.org tags */}\n    <script type=\"application/ld+json\">\n      {JSON.stringify(schemaOrgJSONLD(url, title, siteTitleAlt, isPost))}\n    </script>\n\n    {/* OpenGraph tags */}\n    <meta property=\"og:url\" content={url} />\n    {isPost ? (\n      <meta property=\"og:type\" content=\"article\" />\n    ) : (\n      <meta property=\"og:type\" content=\"website\" />\n    )}\n    <meta property=\"og:title\" content={title} />\n    <meta property=\"og:description\" content={description} />\n    <meta property=\"og:image\" content={image} />\n    <meta\n      property=\"fb:app_id\"\n      content={config.siteFBAppID ? config.siteFBAppID : ''}\n    />\n\n    {/* Twitter Card tags */}\n    <meta name=\"twitter:card\" content=\"summary_large_image\" />\n    <meta\n      name=\"twitter:creator\"\n      content={config.twitter_username ? config.twitter_username : ''}\n    />\n    <meta name=\"twitter:title\" content={title} />\n    <meta name=\"twitter:description\" content={description} />\n    <meta name=\"twitter:image\" content={image} />\n  </Helmet>\n);\n\nSEO.propTypes = {\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  description: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  siteTitleAlt: PropTypes.string.isRequired,\n  isPost: PropTypes.bool.isRequired,\n};\n\nSEO.defaultProps = {\n  title: config.title,\n};\n\nexport default SEO;\n","import dayjs from 'dayjs';\nimport { config } from '../../data';\n\nconst { maxPostsInPage } = config;\n\n// Prevent webpack window problem\nconst isBrowser = () => typeof window !== 'undefined';\n\nconst getPageNumber = () => (isBrowser() ? +window.location.pathname.match(/page[/](\\d)/)[1] : -1);\n\nconst getCurrentPage = () => {\n  if (isBrowser() === true) {\n    const str = window.location.pathname;\n    if (str.indexOf('page') !== -1) {\n      // Return the last pathname in number\n      return getPageNumber();\n    }\n  }\n\n  return 0;\n};\n\nconst getPath = () => (isBrowser() ? window.location.pathname : '');\n\nconst getMaxPages = amount => Math.ceil(amount / maxPostsInPage);\n\n// Array.fill() is added by trial and error\nconst getPages = amount => new Array(amount).fill().map((_, index) => `/page/${index + 1}`);\n\nconst overflow = () => getCurrentPage() === getMaxPages();\n\nconst parseDate = date => dayjs(date).format('DD/MM/YYYY');\n\nconst parseChineseDate = date => dayjs(date).format('DD/MM/YYYY');\n\nconst parseDateToDateTime = date => dayjs(date).format('YYYY, MMM DD | HH:mm');\n\nconst parseDateToMonth = date => dayjs(date).format('MMM, YYYY');\n\nconst getDuration = (start, end) => {\n  if (!end) return 'Working';\n  const dtStart = dayjs(start);\n  const dtEnd = dayjs(end);\n  const diffHrs = dtEnd.diff(dtStart, 'hour');\n  if (diffHrs <= 24) return `${diffHrs} hour${diffHrs > 1 ? 's' : ''}`;\n  const diffDays = dtEnd.diff(dtStart, 'day');\n  if (diffDays <= 30) return `${diffDays} day${diffDays > 1 ? 's' : ''}`;\n  const diffMonths = dtEnd.diff(dtStart, 'month');\n  return `${diffMonths} month${diffMonths > 1 ? 's' : ''}`;\n}\n\nexport {\n  isBrowser,\n  getCurrentPage,\n  getMaxPages,\n  getPages,\n  overflow,\n  parseDate,\n  parseChineseDate,\n  parseDateToDateTime,\n  getPath,\n  getPageNumber,\n  getDuration,\n  parseDateToMonth,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Tag = ({ name, count }) => {\n  return (\n    <a href={`/tag/${name}`} className=\"header-tag\">\n      {name}\n      &nbsp;\n      {count && `(${count})`}\n    </a>\n  );\n}\n\nTag.propTypes = {\n  name: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nTag.defaultProps = {\n  count: '',\n};\n\nexport default Tag;\n","// s = Small Square (90×90)\n// b = Big Square (160×160)\n// t = Small Thumbnail (160×160)\n// m = Medium Thumbnail (320×320)\n// l = Large Thumbnail (640×640)\n// h = Huge Thumbnail (1024×1024)\nconst defaultPicture = 'M795H8A.jpg';\n\nconst parseImgur = (rawImage, size = 'large') => {\n  if (!rawImage) {\n    return `https://i.imgur.com/${defaultPicture}`;\n  }\n\n  const mapping = {\n    'small-square': 's',\n    'big-square': 'b',\n    small: 't',\n    medium: 'm',\n    large: 'l',\n    huge: 'h',\n  };\n\n  // Don't resize the png image\n  // as there is a transparent bug in imgur\n  if (rawImage.match('(png)|(gif)')) {\n    // Prevent double http url\n    if (rawImage.match('http')) {\n      return rawImage;\n    }\n    return `https://i.imgur.com/${rawImage}`;\n  }\n\n  const resizedImage = rawImage.replace(/(.*)\\.(.*)/, `$1${mapping[size]}.$2`);\n  // Prevent double http url\n  if (resizedImage.match('http')) {\n    return resizedImage;\n  }\n  return `https://i.imgur.com/${resizedImage}`;\n};\n\nconst parseTitle = (title, text) => `title=\"${title || text}\"`;\n\nconst parseImageTag = ({ href, title, text }) => `<img class=\"lozad d-block mx-auto\" data-src=${parseImgur(\n  href,\n  'large',\n)} ${parseTitle(title, text)} />`;\n\nconst getGalleryImage = ({ href, title, text }) => `<a data-fancybox=\"gallery\" href=\"${parseImgur(\n  href,\n  'huge',\n)}\">${parseImageTag({ href, title, text })}</a>`;\n\nmodule.exports = {\n  parseImgur,\n  parseImageTag,\n  getGalleryImage,\n};\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport Tag from '../Tag';\n\nimport { parseImgur } from '../../api/images';\nimport { parseDate } from '../../api';\n\nimport './index.scss';\n\nconst imageStyle = (headerImage, color) => ({\n  backgroundColor: `#${color}`,\n  backgroundImage: ` url(${parseImgur(headerImage, 'large')})`,\n});\n\nconst CardHeader = ({ url, image, backgroundColor }) => (\n  <Link to={url} href={url}>\n    <div className=\"wrapper\" style={imageStyle(image, backgroundColor)} />\n  </Link>\n);\n\nconst Card = ({\n  title,\n  date,\n  url,\n  headerImage,\n  headerBackgroundColor,\n  description,\n  tags = [],\n}) => (\n  <div className=\"col-sm-12 pb-4\">\n    <div className=\"custom-card\">\n      {headerImage && (\n        <CardHeader\n          url={url}\n          image={headerImage}\n          backgroundColor={headerBackgroundColor}\n        />\n      )}\n      <div className=\"data\">\n        <div className=\"content\">\n          <div className=\"stats\">\n            <span className=\"date\">{parseDate(date)}</span>\n            {tags && tags.map(name => (\n              <Tag name={name} key={name} />\n            ))}\n          </div>\n          <Link to={url} href={url}>\n            <h4 className=\"title\">{title}</h4>\n          </Link>\n          <p>{description}</p>\n          <Link to={url} href={url}>\n            Read more...\n          </Link>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string,\n  url: PropTypes.string.isRequired,\n  headerImage: PropTypes.string,\n  headerBackgroundColor: PropTypes.string,\n  description: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string),\n};\n\nCardHeader.propTypes = {\n  url: PropTypes.string.isRequired,\n  image: PropTypes.string,\n  backgroundColor: PropTypes.string\n}\n\nCard.defaultProps = {\n  headerImage: '',\n  tags: [],\n  date: '',\n  headerBackgroundColor: '',\n};\n\nexport default Card;\n"],"sourceRoot":""}