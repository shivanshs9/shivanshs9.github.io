{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./src/components/Sidebar/LatestPost/index.js","webpack:///./src/components/Sidebar/Information/index.js","webpack:///./src/components/Sidebar/index.js","webpack:///./src/components/SEO/index.js","webpack:///./src/components/Tag/index.js"],"names":["TagPage","_ref","allMarkdownRemark","data","mapping","edges","forEach","_ref2","node","frontmatter","tags","name","Array","from","Object","keys","sort","b","a","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","className","style","margin","_components_Sidebar__WEBPACK_IMPORTED_MODULE_8__","map","item","_components_Tag__WEBPACK_IMPORTED_MODULE_9__","key","count","_components_SEO__WEBPACK_IMPORTED_MODULE_10__","title","url","siteTitleAlt","isPost","description","image","pageQuery","LatestPost","posts","react_default","gatsby_browser_entry","to","slug","fields","href","Information","totalCount","components_Sidebar_LatestPost","defaultProps","config","wordings","githubUsername","email","profileImg","about","facebook","medium","linkedin","Icon","icon","target","rel","index_es","Sidebar","latestPosts","src","alt","Sidebar_Icon","components_Sidebar_Information","__webpack_exports__","query","render","Sidebar_Sidebar","assign","all","limited","_1307080370","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","_data__WEBPACK_IMPORTED_MODULE_2__","_data__WEBPACK_IMPORTED_MODULE_2___default","SEO","content","type","JSON","stringify","@context","@type","alternateName","itemListElement","position","@id","headline","schemaOrgJSONLD","property","siteFBAppID","twitter_username","Tag","react__WEBPACK_IMPORTED_MODULE_1___default"],"mappings":"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","file":"component---src-pages-tags-js-7c12e62c296b167eacbb.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Sidebar from '../components/Sidebar';\nimport Tag from '../components/Tag';\nimport SEO from '../components/SEO';\n\n// eslint-disable-next-line react/prop-types\nconst TagPage = ({ data }) => {\n  const { allMarkdownRemark } = data;\n\n  const mapping = {};\n\n  allMarkdownRemark.edges.forEach(({ node }) => {\n    const { tags } = node.frontmatter;\n    tags.forEach((name) => {\n      if (mapping[name]) {\n        mapping[name] += 1;\n      } else {\n        mapping[name] = 1;\n      }\n    });\n  });\n\n  const tags = Array.from(Object.keys(mapping)).sort(\n    (b, a) => mapping[a] - mapping[b],\n  );\n\n  return (\n    <div className=\"container\">\n      <div\n        className=\"row\"\n        style={{\n          margin: 15,\n        }}\n      >\n        <Sidebar />\n\n        <div className=\"col order-2\">\n          {tags.map(item => (\n            <Tag name={item} key={item} count={mapping[item]} />\n          ))}\n        </div>\n      </div>\n      <SEO\n        title=\"Tags\"\n        url=\"/tags/\"\n        siteTitleAlt=\"Shivansh Saini\"\n        isPost={false}\n        description=\"Tags Page\"\n        image=\"https://i.imgur.com/M795H8A.jpg\"\n      />\n    </div>\n  );\n};\n\nexport default TagPage;\n\nexport const pageQuery = graphql`\n  query getAllTags {\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\n\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst LatestPost = ({ posts }) => (\n  <div className=\"latest-post\">\n    <p>Latest Posts</p>\n    {posts.map(({ node }) => (\n      <Link\n        to={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n        key={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n        href={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n      >\n        {node.frontmatter.title}\n      </Link>\n    ))}\n  </div>\n);\n\nLatestPost.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default LatestPost;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// import Friend from '../Friend';\nimport LatestPost from '../LatestPost';\nimport './index.scss';\n\n// eslint-disable-next-line react/prop-types\nconst Information = ({ totalCount, posts }) => (\n  <div className=\"d-none d-lg-block information my-2\">\n    <hr />\n    <p>\n      {totalCount}\n      &nbsp; posts\n    </p>\n    <hr />\n    <LatestPost posts={posts} />\n    {/* <hr /> */}\n    {/* <Friend /> */}\n  </div>\n);\n\nInformation.propTypes = {\n  totalCount: PropTypes.number.isRequired,\n  posts: PropTypes.array,\n};\n\nInformation.defaultProps = {\n  posts: [],\n};\n\nexport default Information;\n","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { config } from '../../../data';\n\nimport Information from './Information';\n\nimport './index.scss';\n\nconst {\n  wordings = [],\n  githubUsername,\n  email,\n  profileImg,\n  about,\n  facebook,\n  medium,\n  linkedin,\n} = config;\n\nconst Icon = ({ href, icon }) => (\n  <a\n    target=\"_blank\"\n    href={href}\n    rel=\"external nofollow noopener noreferrer\"\n    className=\"custom-icon\"\n  >\n    <span className=\"fa-layers fa-fw fa-lg\">\n      <FontAwesomeIcon icon={icon} />\n    </span>\n  </a>\n);\n\nconst Sidebar = ({ totalCount, latestPosts }) => (\n  <header className=\"intro-header site-heading text-center col-xl-2 col-lg-3 col-xs-12 order-lg-1\">\n    <div className=\"about-me\">\n      <Link to={about} href={about} className=\"name\">\n        <img className=\"avatar\" src={profileImg} alt=\"shivanshs9\" />\n        <h4>Shivansh Saini</h4>\n      </Link>\n      <p className=\"mb-3\">\n        {wordings[0]}\n        &nbsp;//&nbsp;\n        {wordings[1]}\n      </p>\n      <Icon\n        href={`https://github.com/${githubUsername}`}\n        icon={['fab', 'github']}\n      />\n      {linkedin\n        && <Icon href={`https://linkedin.com/in/${linkedin}/`} icon={['fab', 'linkedin']} />\n      }\n      {medium\n        && <Icon href={`https://medium.com/@${medium}/`} icon={['fab', 'medium']} />\n      }\n      {facebook\n        && <Icon href={`https://www.facebook.com/${facebook}/`} icon={['fab', 'facebook']} />\n      }\n      <Icon href={`mailto:${email}`} icon={['far', 'envelope']} />\n      <Information totalCount={totalCount} posts={latestPosts} />\n    </div>\n  </header>\n);\n\nIcon.propTypes = {\n  href: PropTypes.string.isRequired,\n  icon: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nSidebar.propTypes = {\n  totalCount: PropTypes.number,\n  latestPosts: PropTypes.array, //eslint-disable-line\n};\n\nSidebar.defaultProps = {\n  totalCount: 0,\n  latestPosts: [],\n};\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      fragment cardData on MarkdownRemark {\n        fields {\n          slug\n        }\n        frontmatter {\n          id\n          title\n          url: slug\n          date\n          tags\n          description\n          headerImage\n        }\n      }\n\n      query SidebarQuery {\n        all: allMarkdownRemark {\n          totalCount\n        }\n\n        limited: allMarkdownRemark(\n          sort: { order: DESC, fields: frontmatter___date }\n          limit: 6\n        ) {\n          latestPosts: edges {\n            node {\n              ...cardData\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Sidebar {...data.all} {...data.limited} />}\n  />\n);\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\nimport PropTypes from 'prop-types';\n\nimport config from '../../../data';\n\nconst schemaOrgJSONLD = ({\n  url,\n  title,\n  siteTitleAlt,\n  isPost,\n  image,\n  description,\n}) => [\n  {\n    '@context': 'http://schema.org',\n    '@type': 'WebSite',\n    url,\n    name: title,\n    alternateName: siteTitleAlt || '',\n  },\n  isPost\n    ? {\n      '@context': 'http://schema.org',\n      '@type': 'BreadcrumbList',\n      itemListElement: [\n        {\n          '@type': 'ListItem',\n          position: 1,\n          item: {\n            '@id': url,\n            name: title,\n            image,\n          },\n        },\n      ],\n    }\n    : '',\n  isPost\n    ? {\n      '@context': 'http://schema.org',\n      '@type': 'BlogPosting',\n      url,\n      name: title,\n      alternateName: siteTitleAlt || '',\n      headline: title,\n      image: {\n        '@type': 'ImageObject',\n        url: image,\n      },\n      description,\n    }\n    : '',\n];\n\nconst SEO = ({\n  url, title, description, image, siteTitleAlt, isPost,\n}) => (\n  <Helmet>\n    <title>{title}</title>\n\n    {/* General tags */}\n    <meta name=\"description\" content={description} />\n    <meta name=\"image\" content={image} />\n\n    {/* Schema.org tags */}\n    <script type=\"application/ld+json\">\n      {JSON.stringify(schemaOrgJSONLD(url, title, siteTitleAlt, isPost))}\n    </script>\n\n    {/* OpenGraph tags */}\n    <meta property=\"og:url\" content={url} />\n    {isPost ? (\n      <meta property=\"og:type\" content=\"article\" />\n    ) : (\n      <meta property=\"og:type\" content=\"website\" />\n    )}\n    <meta property=\"og:title\" content={title} />\n    <meta property=\"og:description\" content={description} />\n    <meta property=\"og:image\" content={image} />\n    <meta\n      property=\"fb:app_id\"\n      content={config.siteFBAppID ? config.siteFBAppID : ''}\n    />\n\n    {/* Twitter Card tags */}\n    <meta name=\"twitter:card\" content=\"summary_large_image\" />\n    <meta\n      name=\"twitter:creator\"\n      content={config.twitter_username ? config.twitter_username : ''}\n    />\n    <meta name=\"twitter:title\" content={title} />\n    <meta name=\"twitter:description\" content={description} />\n    <meta name=\"twitter:image\" content={image} />\n  </Helmet>\n);\n\nSEO.propTypes = {\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  description: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  siteTitleAlt: PropTypes.string.isRequired,\n  isPost: PropTypes.bool.isRequired,\n};\n\nSEO.defaultProps = {\n  title: config.title,\n};\n\nexport default SEO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Tag = ({ name, count }) => {\n  return (\n    <a href={`/tag/${name}`} className=\"header-tag\">\n      {name}\n      &nbsp;\n      {count && `(${count})`}\n    </a>\n  );\n}\n\nTag.propTypes = {\n  name: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nTag.defaultProps = {\n  count: '',\n};\n\nexport default Tag;\n"],"sourceRoot":""}