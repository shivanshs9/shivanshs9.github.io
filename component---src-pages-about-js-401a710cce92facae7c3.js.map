{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/Sidebar/LatestPost/index.js","webpack:///./src/components/Sidebar/Information/index.js","webpack:///./src/components/Sidebar/index.js","webpack:///./src/components/SEO/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Sidebar__WEBPACK_IMPORTED_MODULE_2__","_components_SEO__WEBPACK_IMPORTED_MODULE_3__","react_sizeme__WEBPACK_IMPORTED_MODULE_4__","withSize","_ref","data","size","width","a","createElement","className","style","margin","title","url","siteTitleAlt","isPost","description","image","LatestPost","posts","react_default","map","_ref2","node","gatsby_browser_entry","to","frontmatter","slug","fields","key","href","Information","totalCount","components_Sidebar_LatestPost","defaultProps","config","wordings","githubUsername","email","profileImg","about","facebook","medium","linkedin","Icon","icon","target","rel","index_es","Sidebar","latestPosts","src","alt","Sidebar_Icon","components_Sidebar_Information","query","render","Sidebar_Sidebar","Object","assign","all","limited","_1307080370","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","_data__WEBPACK_IMPORTED_MODULE_2__","_data__WEBPACK_IMPORTED_MODULE_2___default","SEO","name","content","type","JSON","stringify","@context","@type","alternateName","itemListElement","position","item","@id","headline","schemaOrgJSONLD","property","siteFBAppID","twitter_username"],"mappings":"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","file":"component---src-pages-about-js-401a710cce92facae7c3.js","sourcesContent":["import React from 'react';\n\nimport { graphql } from 'gatsby';\nimport Sidebar from '../components/Sidebar';\nimport SEO from '../components/SEO';\nimport { withSize } from 'react-sizeme'\n\n\nimport './projects.scss';\n\nconst AboutPage = ({ data, size: { width }}) => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\" style={{ margin: 15 }}>\n        <Sidebar />\n\n        <div className=\"col order-2\">\n        </div>\n      </div>\n\n      <SEO\n        title=\"About me\"\n        url=\"/about/\"\n        siteTitleAlt=\"Shivansh Saini\"\n        isPost={false}\n        description=\"About Page\"\n        image=\"https://i.imgur.com/M795H8A.jpg\"\n      />\n    </div>\n  );\n};\n\n\nexport default withSize()(AboutPage);\n\n// export const query = graphql`\n// `;\n","import React from 'react';\n\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst LatestPost = ({ posts }) => (\n  <div className=\"latest-post\">\n    <p>Latest Posts</p>\n    {posts.map(({ node }) => (\n      <Link\n        to={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n        key={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n        href={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n      >\n        {node.frontmatter.title}\n      </Link>\n    ))}\n  </div>\n);\n\nLatestPost.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default LatestPost;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// import Friend from '../Friend';\nimport LatestPost from '../LatestPost';\nimport './index.scss';\n\n// eslint-disable-next-line react/prop-types\nconst Information = ({ totalCount, posts }) => (\n  <div className=\"d-none d-lg-block information my-2\">\n    <hr />\n    <p>\n      {totalCount}\n      &nbsp; posts\n    </p>\n    <hr />\n    <LatestPost posts={posts} />\n    {/* <hr /> */}\n    {/* <Friend /> */}\n  </div>\n);\n\nInformation.propTypes = {\n  totalCount: PropTypes.number.isRequired,\n  posts: PropTypes.array,\n};\n\nInformation.defaultProps = {\n  posts: [],\n};\n\nexport default Information;\n","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { config } from '../../../data';\n\nimport Information from './Information';\n\nimport './index.scss';\n\nconst {\n  wordings = [],\n  githubUsername,\n  email,\n  profileImg,\n  about,\n  facebook,\n  medium,\n  linkedin,\n} = config;\n\nconst Icon = ({ href, icon }) => (\n  <a\n    target=\"_blank\"\n    href={href}\n    rel=\"external nofollow noopener noreferrer\"\n    className=\"custom-icon\"\n  >\n    <span className=\"fa-layers fa-fw fa-lg\">\n      <FontAwesomeIcon icon={icon} />\n    </span>\n  </a>\n);\n\nconst Sidebar = ({ totalCount, latestPosts }) => (\n  <header className=\"intro-header site-heading text-center col-xl-2 col-lg-3 col-xs-12 order-lg-1\">\n    <div className=\"about-me\">\n      <Link to={about} href={about} className=\"name\">\n        <img className=\"avatar\" src={profileImg} alt=\"shivanshs9\" />\n        <h4>Shivansh Saini</h4>\n      </Link>\n      <p className=\"mb-3\">\n        {wordings[0]}\n        &nbsp;//&nbsp;\n        {wordings[1]}\n      </p>\n      <Icon\n        href={`https://github.com/${githubUsername}`}\n        icon={['fab', 'github']}\n      />\n      {linkedin\n        && <Icon href={`https://linkedin.com/in/${linkedin}/`} icon={['fab', 'linkedin']} />\n      }\n      {medium\n        && <Icon href={`https://medium.com/@${medium}/`} icon={['fab', 'medium']} />\n      }\n      {facebook\n        && <Icon href={`https://www.facebook.com/${facebook}/`} icon={['fab', 'facebook']} />\n      }\n      <Icon href={`mailto:${email}`} icon={['far', 'envelope']} />\n      <Information totalCount={totalCount} posts={latestPosts} />\n    </div>\n  </header>\n);\n\nIcon.propTypes = {\n  href: PropTypes.string.isRequired,\n  icon: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nSidebar.propTypes = {\n  totalCount: PropTypes.number,\n  latestPosts: PropTypes.array, //eslint-disable-line\n};\n\nSidebar.defaultProps = {\n  totalCount: 0,\n  latestPosts: [],\n};\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      fragment cardData on MarkdownRemark {\n        fields {\n          slug\n        }\n        frontmatter {\n          id\n          title\n          url: slug\n          date\n          tags\n          description\n          headerImage\n        }\n      }\n\n      query SidebarQuery {\n        all: allMarkdownRemark {\n          totalCount\n        }\n\n        limited: allMarkdownRemark(\n          sort: { order: DESC, fields: frontmatter___date }\n          limit: 6\n        ) {\n          latestPosts: edges {\n            node {\n              ...cardData\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Sidebar {...data.all} {...data.limited} />}\n  />\n);\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\nimport PropTypes from 'prop-types';\n\nimport config from '../../../data';\n\nconst schemaOrgJSONLD = ({\n  url,\n  title,\n  siteTitleAlt,\n  isPost,\n  image,\n  description,\n}) => [\n  {\n    '@context': 'http://schema.org',\n    '@type': 'WebSite',\n    url,\n    name: title,\n    alternateName: siteTitleAlt || '',\n  },\n  isPost\n    ? {\n      '@context': 'http://schema.org',\n      '@type': 'BreadcrumbList',\n      itemListElement: [\n        {\n          '@type': 'ListItem',\n          position: 1,\n          item: {\n            '@id': url,\n            name: title,\n            image,\n          },\n        },\n      ],\n    }\n    : '',\n  isPost\n    ? {\n      '@context': 'http://schema.org',\n      '@type': 'BlogPosting',\n      url,\n      name: title,\n      alternateName: siteTitleAlt || '',\n      headline: title,\n      image: {\n        '@type': 'ImageObject',\n        url: image,\n      },\n      description,\n    }\n    : '',\n];\n\nconst SEO = ({\n  url, title, description, image, siteTitleAlt, isPost,\n}) => (\n  <Helmet>\n    <title>{title}</title>\n\n    {/* General tags */}\n    <meta name=\"description\" content={description} />\n    <meta name=\"image\" content={image} />\n\n    {/* Schema.org tags */}\n    <script type=\"application/ld+json\">\n      {JSON.stringify(schemaOrgJSONLD(url, title, siteTitleAlt, isPost))}\n    </script>\n\n    {/* OpenGraph tags */}\n    <meta property=\"og:url\" content={url} />\n    {isPost ? (\n      <meta property=\"og:type\" content=\"article\" />\n    ) : (\n      <meta property=\"og:type\" content=\"website\" />\n    )}\n    <meta property=\"og:title\" content={title} />\n    <meta property=\"og:description\" content={description} />\n    <meta property=\"og:image\" content={image} />\n    <meta\n      property=\"fb:app_id\"\n      content={config.siteFBAppID ? config.siteFBAppID : ''}\n    />\n\n    {/* Twitter Card tags */}\n    <meta name=\"twitter:card\" content=\"summary_large_image\" />\n    <meta\n      name=\"twitter:creator\"\n      content={config.twitter_username ? config.twitter_username : ''}\n    />\n    <meta name=\"twitter:title\" content={title} />\n    <meta name=\"twitter:description\" content={description} />\n    <meta name=\"twitter:image\" content={image} />\n  </Helmet>\n);\n\nSEO.propTypes = {\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  description: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  siteTitleAlt: PropTypes.string.isRequired,\n  isPost: PropTypes.bool.isRequired,\n};\n\nSEO.defaultProps = {\n  title: config.title,\n};\n\nexport default SEO;\n"],"sourceRoot":""}