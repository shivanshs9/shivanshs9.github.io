{"version":3,"sources":["webpack:///./src/components/Sidebar/LatestPost/index.js","webpack:///./src/components/Sidebar/Information/index.js","webpack:///./src/components/Sidebar/index.js","webpack:///./src/components/Tag/index.js","webpack:///./src/api/index.js","webpack:///./src/templates/index.js","webpack:///./src/components/ShareBox/index.js","webpack:///./src/components/Card/index.js","webpack:///./src/api/images.js"],"names":["LatestPost","posts","className","map","node","to","frontmatter","url","slug","fields","key","href","title","Information","totalCount","defaultProps","config","wordings","githubUsername","email","profileImg","about","facebook","medium","linkedin","keybase","showResume","window","open","Icon","icon","target","rel","Sidebar","latestPosts","src","alt","faKeybase","onClick","query","render","data","all","limited","Tag","name","count","isBrowser","maxPostsInPage","parseDate","date","dayjs","format","parseDateToDateTime","parseDateToMonth","getDuration","start","end","dtStart","dtEnd","diffHrs","diff","diffDays","diffMonths","NavLinkText","color","text","style","NavLink","test","Page","pageContext","location","group","index","first","last","pathPrefix","previousUrl","nextUrl","Fragment","marginTop","justifyContent","marginBottom","hasCommentBox","CommentButton","lineHeight","paddingLeft","ReactGA","event","category","action","ShareBox","CardHeader","headerImage","image","backgroundColor","backgroundImage","parseImgur","Card","headerBackgroundColor","description","tags","rawImage","size","match","resizedImage","replace","small","large","huge","parseImageTag","parseTitle","module","exports","getGalleryImage"],"mappings":"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","file":"component---src-templates-index-js-19aa6cdbb506683d2d3e.js","sourcesContent":["import React from 'react';\n\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst LatestPost = ({ posts }) => (\n  <div className=\"latest-post\">\n    <p>Latest Posts</p>\n    {posts.map(({ node }) => (\n      <Link\n        to={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n        key={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n        href={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n      >\n        {node.frontmatter.title}\n      </Link>\n    ))}\n  </div>\n);\n\nLatestPost.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default LatestPost;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// import Friend from '../Friend';\nimport LatestPost from '../LatestPost';\nimport './index.scss';\n\n// eslint-disable-next-line react/prop-types\nconst Information = ({ totalCount, posts }) => (\n  <div className=\"d-none d-lg-block information my-2\">\n    <hr />\n    <p>\n      {totalCount}\n      &nbsp; posts\n    </p>\n    <hr />\n    <LatestPost posts={posts} />\n    {/* <hr /> */}\n    {/* <Friend /> */}\n  </div>\n);\n\nInformation.propTypes = {\n  totalCount: PropTypes.number.isRequired,\n  posts: PropTypes.array,\n};\n\nInformation.defaultProps = {\n  posts: [],\n};\n\nexport default Information;\n","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faKeybase } from '@fortawesome/free-brands-svg-icons';\n\nimport { config } from '../../../data';\n\nimport Information from './Information';\n\nimport './index.scss';\n\nconst {\n  wordings = [],\n  githubUsername,\n  email,\n  profileImg,\n  about,\n  facebook,\n  medium,\n  linkedin,\n  keybase\n} = config;\n\nconst showResume = () => {\n  window.open('https://drive.google.com/file/d/1XsZ-coaklQNZrXsdGmNkp3B-t52t_nmv/view', '_blank');\n};\n\nconst Icon = ({ href, icon }) => (\n  <a\n    target=\"_blank\"\n    href={href}\n    rel=\"external nofollow noopener noreferrer\"\n    className=\"custom-icon\"\n  >\n    <span className=\"fa-layers fa-fw fa-lg\">\n      <FontAwesomeIcon icon={icon} />\n    </span>\n  </a>\n);\n\nconst Sidebar = ({ totalCount, latestPosts }) => (\n  <header className=\"intro-header site-heading text-center col-xl-2 col-lg-3 col-xs-12 order-lg-1\">\n    <div className=\"about-me\">\n      <Link to={about} href={about} className=\"name\">\n        <img className=\"avatar\" src={profileImg} alt=\"shivanshs9\" />\n        <h4>Shivansh Saini</h4>\n      </Link>\n      <p className=\"mb-3\">\n        {wordings[0]}\n        &nbsp;//&nbsp;\n        {wordings[1]}\n      </p>\n      {keybase\n        && <Icon href={`https://keybase.io/${keybase}`} icon={faKeybase} />\n      }\n      <Icon\n        href={`https://github.com/${githubUsername}`}\n        icon={['fab', 'github']}\n      />\n      {linkedin\n        && <Icon href={`https://linkedin.com/in/${linkedin}/`} icon={['fab', 'linkedin']} />\n      }\n      {medium\n        && <Icon href={`https://medium.com/@${medium}/`} icon={['fab', 'medium']} />\n      }\n      {facebook\n        && <Icon href={`https://www.facebook.com/${facebook}/`} icon={['fab', 'facebook']} />\n      }\n      <Icon href={`mailto:${email}`} icon={['far', 'envelope']} />\n      <div className=\"link-resume\" onClick={showResume}>\n        Resume\n      </div>\n      <Information totalCount={totalCount} posts={latestPosts} />\n    </div>\n  </header>\n);\n\nIcon.propTypes = {\n  href: PropTypes.string.isRequired,\n  icon: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nSidebar.propTypes = {\n  totalCount: PropTypes.number,\n  latestPosts: PropTypes.array, //eslint-disable-line\n};\n\nSidebar.defaultProps = {\n  totalCount: 0,\n  latestPosts: [],\n};\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      fragment cardData on MarkdownRemark {\n        fields {\n          slug\n        }\n        frontmatter {\n          id\n          title\n          url: slug\n          date\n          tags\n          description\n          headerImage\n        }\n      }\n\n      query SidebarQuery {\n        all: allMarkdownRemark {\n          totalCount\n        }\n\n        limited: allMarkdownRemark(\n          sort: { order: DESC, fields: frontmatter___date }\n          limit: 6\n        ) {\n          latestPosts: edges {\n            node {\n              ...cardData\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Sidebar {...data.all} {...data.limited} />}\n  />\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Tag = ({ name, count }) => {\n  return (\n    <a href={`/tag/${name}`} className=\"header-tag\">\n      {name}\n      &nbsp;\n      {count && `(${count})`}\n    </a>\n  );\n}\n\nTag.propTypes = {\n  name: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nTag.defaultProps = {\n  count: '',\n};\n\nexport default Tag;\n","import dayjs from 'dayjs';\nimport { config } from '../../data';\n\nconst { maxPostsInPage } = config;\n\n// Prevent webpack window problem\nconst isBrowser = () => typeof window !== 'undefined';\n\nconst getPageNumber = () => (isBrowser() ? +window.location.pathname.match(/page[/](\\d)/)[1] : -1);\n\nconst getCurrentPage = () => {\n  if (isBrowser() === true) {\n    const str = window.location.pathname;\n    if (str.indexOf('page') !== -1) {\n      // Return the last pathname in number\n      return getPageNumber();\n    }\n  }\n\n  return 0;\n};\n\nconst getPath = () => (isBrowser() ? window.location.pathname : '');\n\nconst getMaxPages = amount => Math.ceil(amount / maxPostsInPage);\n\n// Array.fill() is added by trial and error\nconst getPages = amount => new Array(amount).fill().map((_, index) => `/page/${index + 1}`);\n\nconst overflow = () => getCurrentPage() === getMaxPages();\n\nconst parseDate = date => dayjs(date).format('DD/MM/YYYY');\n\nconst parseChineseDate = date => dayjs(date).format('DD/MM/YYYY');\n\nconst parseDateToDateTime = date => dayjs(date).format('YYYY, MMM DD | HH:mm');\n\nconst parseDateToMonth = date => dayjs(date).format('MMM, YYYY');\n\nconst getDuration = (start, end) => {\n  if (!end) return 'Working';\n  const dtStart = dayjs(start);\n  const dtEnd = dayjs(end);\n  const diffHrs = dtEnd.diff(dtStart, 'hour');\n  if (diffHrs <= 24) return `${diffHrs} hour${diffHrs > 1 ? 's' : ''}`;\n  const diffDays = dtEnd.diff(dtStart, 'day');\n  if (diffDays <= 30) return `${diffDays} day${diffDays > 1 ? 's' : ''}`;\n  const diffMonths = dtEnd.diff(dtStart, 'month');\n  return `${diffMonths} month${diffMonths > 1 ? 's' : ''}`;\n}\n\nexport {\n  isBrowser,\n  getCurrentPage,\n  getMaxPages,\n  getPages,\n  overflow,\n  parseDate,\n  parseChineseDate,\n  parseDateToDateTime,\n  getPath,\n  getPageNumber,\n  getDuration,\n  parseDateToMonth,\n};\n","/* eslint react/prop-types: 0 */\nimport React from 'react';\nimport Link from 'gatsby-link';\n\nimport Card from '../components/Card';\nimport Sidebar from '../components/Sidebar';\nimport ShareBox from '../components/ShareBox';\n\nimport './index.scss';\n\nconst NavLinkText = ({ color, text }) => (\n  <div\n    className=\"navlink\"\n    style={{\n      color,\n    }}\n  >\n    {text}\n  </div>\n);\n\nconst NavLink = ({ test, url, text }) => {\n  if (!test) {\n    return <NavLinkText color=\"#7d7d7d\" text={text} />;\n  }\n\n  return (\n    <Link to={`${url}`}>\n      <NavLinkText color=\"#66ccff\" text={text} />\n    </Link>\n  );\n};\n\nconst Page = ({ pageContext, location }) => {\n  const {\n    group, index, first, last, pathPrefix,\n  } = pageContext;\n\n  const previousUrl = index - 1 === 1 ? '' : `/${pathPrefix}/${index - 1}`;\n  const nextUrl = `/${pathPrefix}/${index + 1}`;\n\n  return (\n    <React.Fragment>\n      <div\n        className=\"row homepage\"\n        style={{\n          marginTop: 20,\n        }}\n      >\n        <Sidebar />\n        <div className=\"col-xl-6 col-lg-7 col-md-12 col-xs-12 order-2\">\n          {group.map(({ node }) => (\n            <Card {...node.frontmatter} url={node.frontmatter.slug ? node.frontmatter.slug : node.fields.slug} key={node.fields.slug} />\n          ))}\n\n          <div\n            className=\"row\"\n            style={{\n              justifyContent: 'space-around',\n              marginBottom: '20px',\n            }}\n          >\n            <div className=\"previousLink\">\n              <NavLink test={!first} url={previousUrl} text=\"Previous\" />\n            </div>\n            <div className=\"nextLink\">\n              <NavLink test={!last} url={nextUrl} text=\"Next\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-2 col-lg-1 order-3\" />\n      </div>\n      <ShareBox url={location.href} hasCommentBox={false} />\n    </React.Fragment>\n  );\n};\n\nexport default Page;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport ReactGA from 'react-ga';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './index.scss';\n\nconst CommentButton = () => (\n  <a\n    className=\"share-button\"\n    style={{\n      lineHeight: '1.7rem',\n      color: '#337ab7',\n      paddingLeft: '0.15rem',\n    }}\n    href=\"#gitalk-container\"\n    onClick={() =>\n      ReactGA.event({\n        category: 'User',\n        action: 'Goto Comment Box',\n      })\n    }\n  >\n    <FontAwesomeIcon icon={['far', 'comment']} />\n  </a>\n);\n\nconst ShareBox = ({ url, hasCommentBox }) => (\n  <div className=\"m-share-box\">\n    <a\n      href={`https://www.facebook.com/sharer/sharer.php?u=${url}`}\n      title=\"\"\n      className=\"share-button\"\n      onClick={() =>\n        ReactGA.event({\n          category: 'Share',\n          action: 'Facebook Share',\n        })\n      }\n    >\n      <FontAwesomeIcon icon={['fab', 'facebook-f']} />\n    </a>\n\n    {/* 視覺置中 => 稍微往上偏移 */}\n    {hasCommentBox && <CommentButton />}\n\n    <a\n      className=\"share-button\"\n      href=\"#header\"\n      onClick={() => {\n        ReactGA.event({\n          category: 'User',\n          action: 'Scroll to Top',\n        });\n      }}\n      style={{\n        lineHeight: '1.7rem',\n        paddingLeft: '0.1rem',\n      }}\n    >\n      <FontAwesomeIcon icon={['fas', 'chevron-up']} />\n    </a>\n  </div>\n);\n\nShareBox.propTypes = {\n  url: PropTypes.string.isRequired,\n  hasCommentBox: PropTypes.bool,\n};\n\nShareBox.defaultProps = {\n  hasCommentBox: true,\n};\n\nexport default ShareBox;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport Tag from '../Tag';\n\nimport { parseImgur } from '../../api/images';\nimport { parseDate } from '../../api';\n\nimport './index.scss';\n\nconst imageStyle = (headerImage, color) => ({\n  backgroundColor: `#${color}`,\n  backgroundImage: ` url(${parseImgur(headerImage, 'large')})`,\n});\n\nconst CardHeader = ({ url, image, backgroundColor }) => (\n  <Link to={url} href={url}>\n    <div className=\"wrapper\" style={imageStyle(image, backgroundColor)} />\n  </Link>\n);\n\nconst Card = ({\n  title,\n  date,\n  url,\n  headerImage,\n  headerBackgroundColor,\n  description,\n  tags = [],\n}) => (\n  <div className=\"col-sm-12 pb-4\">\n    <div className=\"custom-card\">\n      {headerImage && (\n        <CardHeader\n          url={url}\n          image={headerImage}\n          backgroundColor={headerBackgroundColor}\n        />\n      )}\n      <div className=\"data\">\n        <div className=\"content\">\n          <div className=\"stats\">\n            <span className=\"date\">{parseDate(date)}</span>\n            {tags && tags.map(name => (\n              <Tag name={name} key={name} />\n            ))}\n          </div>\n          <Link to={url} href={url}>\n            <h4 className=\"title\">{title}</h4>\n          </Link>\n          <p>{description}</p>\n          <Link to={url} href={url}>\n            Read more...\n          </Link>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string,\n  url: PropTypes.string.isRequired,\n  headerImage: PropTypes.string,\n  headerBackgroundColor: PropTypes.string,\n  description: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string),\n};\n\nCardHeader.propTypes = {\n  url: PropTypes.string.isRequired,\n  image: PropTypes.string,\n  backgroundColor: PropTypes.string\n}\n\nCard.defaultProps = {\n  headerImage: '',\n  tags: [],\n  date: '',\n  headerBackgroundColor: '',\n};\n\nexport default Card;\n","// s = Small Square (90×90)\n// b = Big Square (160×160)\n// t = Small Thumbnail (160×160)\n// m = Medium Thumbnail (320×320)\n// l = Large Thumbnail (640×640)\n// h = Huge Thumbnail (1024×1024)\nconst defaultPicture = 'M795H8A.jpg';\n\nconst parseImgur = (rawImage, size = 'large') => {\n  if (!rawImage) {\n    return `https://i.imgur.com/${defaultPicture}`;\n  }\n  if (rawImage.match('http') && !rawImage.match('imgur.com')) return rawImage;\n\n  const mapping = {\n    'small-square': 's',\n    'big-square': 'b',\n    small: 't',\n    medium: 'm',\n    large: 'l',\n    huge: 'h',\n  };\n\n  // Don't resize the png image\n  // as there is a transparent bug in imgur\n  if (rawImage.match('(png)|(gif)')) {\n    // Prevent double http url\n    if (rawImage.match('http')) {\n      return rawImage;\n    }\n    return `https://i.imgur.com/${rawImage}`;\n  }\n\n  const resizedImage = rawImage.replace(/(.*)\\.(.*)/, `$1${mapping[size]}.$2`);\n  // Prevent double http url\n  if (resizedImage.match('http')) {\n    return resizedImage;\n  }\n  return `https://i.imgur.com/${resizedImage}`;\n};\n\nconst parseTitle = (title, text) => `title=\"${title || text}\"`;\n\nconst parseImageTag = ({ href, title, text }) => `<img class=\"lozad d-block mx-auto\" data-src=${parseImgur(\n  href,\n  'large',\n)} ${parseTitle(title, text)} />`;\n\nconst getGalleryImage = ({ href, title, text }) => `<a data-fancybox=\"gallery\" href=\"${parseImgur(\n  href,\n  'huge',\n)}\">${parseImageTag({ href, title, text })}</a>`;\n\nmodule.exports = {\n  parseImgur,\n  parseImageTag,\n  getGalleryImage,\n};\n"],"sourceRoot":""}