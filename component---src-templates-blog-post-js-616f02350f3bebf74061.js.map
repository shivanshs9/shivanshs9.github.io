{"version":3,"sources":["webpack:///./src/components/Content/index.js","webpack:///./src/components/Header/index.js","webpack:///./src/templates/blog-post.js","webpack:///./src/components/Sidebar/LatestPost/index.js","webpack:///./src/components/Sidebar/Information/index.js","webpack:///./src/components/Sidebar/index.js","webpack:///./src/api/index.js","webpack:///./src/components/SEO/index.js","webpack:///./src/api/images.js","webpack:///./src/components/ShareBox/index.js"],"names":["Content","props","_this","post","_Component","call","this","componentDidMount","isBrowser","lozad","load","el","src","dataset","onload","classList","add","observe","render","react_default","a","createElement","dangerouslySetInnerHTML","__html","style","padding","background","Component","Header","_ref","img","title","subTitle","authorImage","authorName","className","id","backgroundImage","marginTop","alt","defaultProps","name","config","iconUrl","gitalk","bgWhite","Gitalk","window","require","undefined","BlogPost","data","_this$data$content$ed","content","edges","node","frontmatter","graphqlId","Object","assign","html","fields","excerpt","slug","date","headerImage","src_components_Header","parseDateToDateTime","Sidebar","components_Content","ExternalLink","href","ShareBox","url","SEO","siteTitleAlt","isPost","description","image","pageQuery","LatestPost","posts","map","_ref2","gatsby_browser_entry","to","key","Information","totalCount","components_Sidebar_LatestPost","wordings","githubUsername","email","profileImg","about","facebook","medium","linkedin","Icon","icon","target","rel","index_es","latestPosts","Sidebar_Icon","components_Sidebar_Information","__webpack_exports__","query","Sidebar_Sidebar","all","limited","_1307080370","maxPostsInPage","parseDate","dayjs","format","parseDateToMonth","getDuration","start","end","dtStart","dtEnd","diffHrs","diff","diffDays","diffMonths","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","_data__WEBPACK_IMPORTED_MODULE_2__","_data__WEBPACK_IMPORTED_MODULE_2___default","type","JSON","stringify","@context","@type","alternateName","itemListElement","position","item","@id","headline","schemaOrgJSONLD","property","siteFBAppID","twitter_username","parseImgur","rawImage","size","match","resizedImage","replace","small-square","big-square","small","large","huge","parseImageTag","text","parseTitle","module","exports","getGalleryImage","react_ga__WEBPACK_IMPORTED_MODULE_1__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","CommentButton","lineHeight","color","paddingLeft","onClick","ReactGA","event","category","action","hasCommentBox"],"mappings":"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","file":"component---src-templates-blog-post-js-616f02350f3bebf74061.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport lozad from 'lozad';\n\nimport { isBrowser } from '../../api';\n\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n    const { post } = this.props;\n    this.post = post;\n  }\n\n  componentDidMount() {\n    // lazy loads elements with default selector as '.lozad'\n    // Prevent WebPack build fail\n    if (isBrowser()) {\n      // Initialize library\n      const observer = lozad('.lozad', {\n        load(el) {\n          /* eslint-disable no-param-reassign */\n\n          el.src = el.dataset.src;\n          el.onload = () => {\n            el.classList.add('animated');\n            el.classList.add('fadeIn');\n          };\n          /* eslint-enable */\n        },\n      });\n      observer.observe();\n    }\n  }\n\n  render() {\n    const { post } = this.props;\n    return (\n      <div\n        // eslint-disable-next-line react/no-danger\n        dangerouslySetInnerHTML={{ __html: post }}\n        style={{\n          padding: 30,\n          background: 'white',\n        }}\n      />\n    );\n  }\n}\n\nContent.propTypes = {\n  post: PropTypes.string.isRequired,\n};\n\nexport default Content;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.scss';\n\nimport { parseImgur } from '../../api/images';\n\nconst Header = ({\n  img,\n  title,\n  subTitle,\n  authorImage,\n  authorName,\n}) => (\n  <div className=\"col-12 header\" style={{ padding: 0 }} id=\"header\">\n    <div\n      className=\"img-container\"\n      style={{\n        backgroundImage: `linear-gradient( rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2) ), url(${img})`,\n        marginTop: -58,\n      }}\n    >\n      {title && <h1 className=\"u-title\">{title}</h1>}\n      {subTitle && (\n        <div className=\"u-subtitle\">\n          <div className=\"m-left\">\n            {authorImage && (\n              <img\n                // src={parseImgur(authorImage, 'small-square')}\n                src={authorImage}\n                className=\"author-image\"\n                alt={authorName}\n              />\n            )}\n            <span className=\"author-name\">{authorName}</span>\n          </div>\n          <span className=\"text\">{subTitle}</span>\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nHeader.propTypes = {\n  img: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  subTitle: PropTypes.string,\n  authorName: PropTypes.string,\n  authorImage: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  title: '',\n  subTitle: '',\n  authorName: '',\n  authorImage: '',\n};\n\nexport default Header;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint react/prop-types: 0 */\n\n// Components\nimport React, { Component } from 'react';\nimport { graphql } from 'gatsby';\n\nimport 'gitalk/dist/gitalk.css';\n\nimport { parseDateToDateTime } from '../api';\n\nimport ExternalLink from '../components/ExternalLink';\nimport Sidebar from '../components/Sidebar';\nimport Content from '../components/Content';\nimport SEO from '../components/SEO';\n\nimport Header from '../components/Header';\n// import TableOfContent from '../components/TableOfContent';\nimport ShareBox from '../components/ShareBox';\n\nimport { config } from '../../data';\n\n// Styles\nimport './blog-post.scss';\n\nconst { name, iconUrl, gitalk } = config;\n\nconst bgWhite = { padding: '10px 30px', background: 'white' };\n\n// Prevent webpack window problem\nconst isBrowser = typeof window !== 'undefined';\nconst Gitalk = isBrowser ? require('gitalk') : undefined;\n\nclass BlogPost extends Component {\n  constructor(props) {\n    super(props);\n    this.data = this.props.data;\n  }\n\n  componentDidMount() {\n    const { frontmatter, id: graphqlId } = this.data.content.edges[0].node;\n    const { title, id } = frontmatter;\n\n    const GitTalkInstance = new Gitalk({\n      ...gitalk,\n      title,\n      id: id || graphqlId,\n    });\n    GitTalkInstance.render('gitalk-container');\n  }\n\n  render() {\n    const { node } = this.data.content.edges[0];\n\n    const {\n      html, frontmatter, fields, excerpt,\n    } = node;\n\n    const { slug } = fields;\n\n    const { date, headerImage, title } = frontmatter;\n\n    return (\n      <div className=\"row post order-2\">\n        <Header\n          img={headerImage || 'https://i.imgur.com/63BR8Nf.jpg'}\n          title={title}\n          authorName={name}\n          authorImage={iconUrl}\n          subTitle={parseDateToDateTime(date)}\n        />\n        <Sidebar />\n        <div className=\"col-xl-7 col-lg-6 col-md-12 col-sm-12 order-10 content\">\n          <Content post={html} />\n          <div className=\"m-message\" style={bgWhite}>\n            I would love to hear any constructive feedbacks for my contents, by any method you prefer - Medium, Gitalk or even email. \n            If you do like my content, please\n            &nbsp;\n            <ExternalLink\n              href=\"https://github.com/shivanshs9/shivanshs9.github.io\"\n              title=\"star my blog\"\n            />\n            &nbsp;or&nbsp;\n            <ExternalLink\n              href=\"https://github.com/shivanshs9/\"\n              title=\"follow me at Github\"\n            />\n            .\n          </div>\n\n          <div id=\"gitalk-container\" />\n        </div>\n\n        <ShareBox url={slug} />\n\n        <SEO\n          title={title}\n          url={slug}\n          siteTitleAlt=\"Shivansh Saini\"\n          isPost={false}\n          description={excerpt}\n          image={headerImage || 'https://i.imgur.com/63BR8Nf.jpg'}\n        />\n      </div>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  fragment post on MarkdownRemark {\n    fields {\n      slug\n    }\n    frontmatter {\n      id\n      title\n      slug\n      date\n      headerImage\n    }\n  }\n\n  query BlogPostQuery($index: Int) {\n    content: allMarkdownRemark(\n      sort: { order: DESC, fields: frontmatter___date }\n      skip: $index\n      limit: 1\n    ) {\n      edges {\n        node {\n          id\n          html\n          excerpt\n          ...post\n        }\n\n        previous {\n          ...post\n        }\n\n        next {\n          ...post\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogPost;\n","import React from 'react';\n\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst LatestPost = ({ posts }) => (\n  <div className=\"latest-post\">\n    <p>Latest Posts</p>\n    {posts.map(({ node }) => (\n      <Link\n        to={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n        key={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n        href={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n      >\n        {node.frontmatter.title}\n      </Link>\n    ))}\n  </div>\n);\n\nLatestPost.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default LatestPost;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// import Friend from '../Friend';\nimport LatestPost from '../LatestPost';\nimport './index.scss';\n\n// eslint-disable-next-line react/prop-types\nconst Information = ({ totalCount, posts }) => (\n  <div className=\"d-none d-lg-block information my-2\">\n    <hr />\n    <p>\n      {totalCount}\n      &nbsp; posts\n    </p>\n    <hr />\n    <LatestPost posts={posts} />\n    {/* <hr /> */}\n    {/* <Friend /> */}\n  </div>\n);\n\nInformation.propTypes = {\n  totalCount: PropTypes.number.isRequired,\n  posts: PropTypes.array,\n};\n\nInformation.defaultProps = {\n  posts: [],\n};\n\nexport default Information;\n","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { config } from '../../../data';\n\nimport Information from './Information';\n\nimport './index.scss';\n\nconst {\n  wordings = [],\n  githubUsername,\n  email,\n  profileImg,\n  about,\n  facebook,\n  medium,\n  linkedin,\n} = config;\n\nconst Icon = ({ href, icon }) => (\n  <a\n    target=\"_blank\"\n    href={href}\n    rel=\"external nofollow noopener noreferrer\"\n    className=\"custom-icon\"\n  >\n    <span className=\"fa-layers fa-fw fa-lg\">\n      <FontAwesomeIcon icon={icon} />\n    </span>\n  </a>\n);\n\nconst Sidebar = ({ totalCount, latestPosts }) => (\n  <header className=\"intro-header site-heading text-center col-xl-2 col-lg-3 col-xs-12 order-lg-1\">\n    <div className=\"about-me\">\n      <Link to={about} href={about} className=\"name\">\n        <img className=\"avatar\" src={profileImg} alt=\"shivanshs9\" />\n        <h4>Shivansh Saini</h4>\n      </Link>\n      <p className=\"mb-3\">\n        {wordings[0]}\n        &nbsp;//&nbsp;\n        {wordings[1]}\n      </p>\n      <Icon\n        href={`https://github.com/${githubUsername}`}\n        icon={['fab', 'github']}\n      />\n      {linkedin\n        && <Icon href={`https://linkedin.com/in/${linkedin}/`} icon={['fab', 'linkedin']} />\n      }\n      {medium\n        && <Icon href={`https://medium.com/@${medium}/`} icon={['fab', 'medium']} />\n      }\n      {facebook\n        && <Icon href={`https://www.facebook.com/${facebook}/`} icon={['fab', 'facebook']} />\n      }\n      <Icon href={`mailto:${email}`} icon={['far', 'envelope']} />\n      <Information totalCount={totalCount} posts={latestPosts} />\n    </div>\n  </header>\n);\n\nIcon.propTypes = {\n  href: PropTypes.string.isRequired,\n  icon: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nSidebar.propTypes = {\n  totalCount: PropTypes.number,\n  latestPosts: PropTypes.array, //eslint-disable-line\n};\n\nSidebar.defaultProps = {\n  totalCount: 0,\n  latestPosts: [],\n};\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      fragment cardData on MarkdownRemark {\n        fields {\n          slug\n        }\n        frontmatter {\n          id\n          title\n          url: slug\n          date\n          tags\n          description\n          headerImage\n        }\n      }\n\n      query SidebarQuery {\n        all: allMarkdownRemark {\n          totalCount\n        }\n\n        limited: allMarkdownRemark(\n          sort: { order: DESC, fields: frontmatter___date }\n          limit: 6\n        ) {\n          latestPosts: edges {\n            node {\n              ...cardData\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Sidebar {...data.all} {...data.limited} />}\n  />\n);\n","import dayjs from 'dayjs';\nimport { config } from '../../data';\n\nconst { maxPostsInPage } = config;\n\n// Prevent webpack window problem\nconst isBrowser = () => typeof window !== 'undefined';\n\nconst getPageNumber = () => (isBrowser() ? +window.location.pathname.match(/page[/](\\d)/)[1] : -1);\n\nconst getCurrentPage = () => {\n  if (isBrowser() === true) {\n    const str = window.location.pathname;\n    if (str.indexOf('page') !== -1) {\n      // Return the last pathname in number\n      return getPageNumber();\n    }\n  }\n\n  return 0;\n};\n\nconst getPath = () => (isBrowser() ? window.location.pathname : '');\n\nconst getMaxPages = amount => Math.ceil(amount / maxPostsInPage);\n\n// Array.fill() is added by trial and error\nconst getPages = amount => new Array(amount).fill().map((_, index) => `/page/${index + 1}`);\n\nconst overflow = () => getCurrentPage() === getMaxPages();\n\nconst parseDate = date => dayjs(date).format('DD/MM/YYYY');\n\nconst parseChineseDate = date => dayjs(date).format('DD/MM/YYYY');\n\nconst parseDateToDateTime = date => dayjs(date).format('YYYY, MMM DD | HH:mm');\n\nconst parseDateToMonth = date => dayjs(date).format('MMM, YYYY');\n\nconst getDuration = (start, end) => {\n  if (!end) return 'Working';\n  const dtStart = dayjs(start);\n  const dtEnd = dayjs(end);\n  const diffHrs = dtEnd.diff(dtStart, 'hour');\n  if (diffHrs <= 24) return `${diffHrs} hour${diffHrs > 1 ? 's' : ''}`;\n  const diffDays = dtEnd.diff(dtStart, 'day');\n  if (diffDays <= 30) return `${diffDays} day${diffDays > 1 ? 's' : ''}`;\n  const diffMonths = dtEnd.diff(dtStart, 'month');\n  return `${diffMonths} month${diffMonths > 1 ? 's' : ''}`;\n}\n\nexport {\n  isBrowser,\n  getCurrentPage,\n  getMaxPages,\n  getPages,\n  overflow,\n  parseDate,\n  parseChineseDate,\n  parseDateToDateTime,\n  getPath,\n  getPageNumber,\n  getDuration,\n  parseDateToMonth,\n};\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\nimport PropTypes from 'prop-types';\n\nimport config from '../../../data';\n\nconst schemaOrgJSONLD = ({\n  url,\n  title,\n  siteTitleAlt,\n  isPost,\n  image,\n  description,\n}) => [\n  {\n    '@context': 'http://schema.org',\n    '@type': 'WebSite',\n    url,\n    name: title,\n    alternateName: siteTitleAlt || '',\n  },\n  isPost\n    ? {\n      '@context': 'http://schema.org',\n      '@type': 'BreadcrumbList',\n      itemListElement: [\n        {\n          '@type': 'ListItem',\n          position: 1,\n          item: {\n            '@id': url,\n            name: title,\n            image,\n          },\n        },\n      ],\n    }\n    : '',\n  isPost\n    ? {\n      '@context': 'http://schema.org',\n      '@type': 'BlogPosting',\n      url,\n      name: title,\n      alternateName: siteTitleAlt || '',\n      headline: title,\n      image: {\n        '@type': 'ImageObject',\n        url: image,\n      },\n      description,\n    }\n    : '',\n];\n\nconst SEO = ({\n  url, title, description, image, siteTitleAlt, isPost,\n}) => (\n  <Helmet>\n    <title>{title}</title>\n\n    {/* General tags */}\n    <meta name=\"description\" content={description} />\n    <meta name=\"image\" content={image} />\n\n    {/* Schema.org tags */}\n    <script type=\"application/ld+json\">\n      {JSON.stringify(schemaOrgJSONLD(url, title, siteTitleAlt, isPost))}\n    </script>\n\n    {/* OpenGraph tags */}\n    <meta property=\"og:url\" content={url} />\n    {isPost ? (\n      <meta property=\"og:type\" content=\"article\" />\n    ) : (\n      <meta property=\"og:type\" content=\"website\" />\n    )}\n    <meta property=\"og:title\" content={title} />\n    <meta property=\"og:description\" content={description} />\n    <meta property=\"og:image\" content={image} />\n    <meta\n      property=\"fb:app_id\"\n      content={config.siteFBAppID ? config.siteFBAppID : ''}\n    />\n\n    {/* Twitter Card tags */}\n    <meta name=\"twitter:card\" content=\"summary_large_image\" />\n    <meta\n      name=\"twitter:creator\"\n      content={config.twitter_username ? config.twitter_username : ''}\n    />\n    <meta name=\"twitter:title\" content={title} />\n    <meta name=\"twitter:description\" content={description} />\n    <meta name=\"twitter:image\" content={image} />\n  </Helmet>\n);\n\nSEO.propTypes = {\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  description: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  siteTitleAlt: PropTypes.string.isRequired,\n  isPost: PropTypes.bool.isRequired,\n};\n\nSEO.defaultProps = {\n  title: config.title,\n};\n\nexport default SEO;\n","// s = Small Square (90×90)\n// b = Big Square (160×160)\n// t = Small Thumbnail (160×160)\n// m = Medium Thumbnail (320×320)\n// l = Large Thumbnail (640×640)\n// h = Huge Thumbnail (1024×1024)\nconst defaultPicture = 'M795H8A.jpg';\n\nconst parseImgur = (rawImage, size = 'large') => {\n  if (!rawImage) {\n    return `https://i.imgur.com/${defaultPicture}`;\n  }\n\n  const mapping = {\n    'small-square': 's',\n    'big-square': 'b',\n    small: 't',\n    medium: 'm',\n    large: 'l',\n    huge: 'h',\n  };\n\n  // Don't resize the png image\n  // as there is a transparent bug in imgur\n  if (rawImage.match('(png)|(gif)')) {\n    // Prevent double http url\n    if (rawImage.match('http')) {\n      return rawImage;\n    }\n    return `https://i.imgur.com/${rawImage}`;\n  }\n\n  const resizedImage = rawImage.replace(/(.*)\\.(.*)/, `$1${mapping[size]}.$2`);\n  // Prevent double http url\n  if (resizedImage.match('http')) {\n    return resizedImage;\n  }\n  return `https://i.imgur.com/${resizedImage}`;\n};\n\nconst parseTitle = (title, text) => `title=\"${title || text}\"`;\n\nconst parseImageTag = ({ href, title, text }) => `<img class=\"lozad d-block mx-auto\" data-src=${parseImgur(\n  href,\n  'large',\n)} ${parseTitle(title, text)} />`;\n\nconst getGalleryImage = ({ href, title, text }) => `<a data-fancybox=\"gallery\" href=\"${parseImgur(\n  href,\n  'huge',\n)}\">${parseImageTag({ href, title, text })}</a>`;\n\nmodule.exports = {\n  parseImgur,\n  parseImageTag,\n  getGalleryImage,\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport ReactGA from 'react-ga';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './index.scss';\n\nconst CommentButton = () => (\n  <a\n    className=\"share-button\"\n    style={{\n      lineHeight: '1.7rem',\n      color: '#337ab7',\n      paddingLeft: '0.15rem',\n    }}\n    href=\"#gitalk-container\"\n    onClick={() =>\n      ReactGA.event({\n        category: 'User',\n        action: 'Goto Comment Box',\n      })\n    }\n  >\n    <FontAwesomeIcon icon={['far', 'comment']} />\n  </a>\n);\n\nconst ShareBox = ({ url, hasCommentBox }) => (\n  <div className=\"m-share-box\">\n    <a\n      href={`https://www.facebook.com/sharer/sharer.php?u=${url}`}\n      title=\"\"\n      className=\"share-button\"\n      onClick={() =>\n        ReactGA.event({\n          category: 'Share',\n          action: 'Facebook Share',\n        })\n      }\n    >\n      <FontAwesomeIcon icon={['fab', 'facebook-f']} />\n    </a>\n\n    {/* 視覺置中 => 稍微往上偏移 */}\n    {hasCommentBox && <CommentButton />}\n\n    <a\n      className=\"share-button\"\n      href=\"#header\"\n      onClick={() => {\n        ReactGA.event({\n          category: 'User',\n          action: 'Scroll to Top',\n        });\n      }}\n      style={{\n        lineHeight: '1.7rem',\n        paddingLeft: '0.1rem',\n      }}\n    >\n      <FontAwesomeIcon icon={['fas', 'chevron-up']} />\n    </a>\n  </div>\n);\n\nShareBox.propTypes = {\n  url: PropTypes.string.isRequired,\n  hasCommentBox: PropTypes.bool,\n};\n\nShareBox.defaultProps = {\n  hasCommentBox: true,\n};\n\nexport default ShareBox;\n"],"sourceRoot":""}